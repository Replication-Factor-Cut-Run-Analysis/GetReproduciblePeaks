configfile: "config/config.yml"

##################################################################
##                    Define input functions                    ##
##################################################################

# this was created after reading 
#  https://eriqande.github.io/eca-bioinf-handbook/managing-workflows-with-snakemake.html
#  https://www.biostars.org/p/335903/

import pandas as pd
import re
import common_functions as cf

# this reads the CSV file and sets an index using the values in the "sample" column.
samples_table = pd.read_csv(config["samples_csv"]).set_index("sample", drop=False)
samples_table = samples_table.applymap(str)

# set variables
samples_table_w_merged_suffix = cf.add_merge_suffix_to_merged_samples(samples_table)
merged_keywords_lst = cf.keywords_to_merge(samples_table_w_merged_suffix)
all_samples_lst = merged_keywords_lst + samples_table['sample'].to_list()
samples_to_merge_lst = cf.make_samples_to_merge_list(samples_table_w_merged_suffix)
bams_to_merge_dict = cf.make_bams_to_merge_dict(merged_keywords_lst,samples_table_w_merged_suffix)
all_treatments_table = cf.make_all_treatments_table(samples_table_w_merged_suffix)
treatment_samples_lst = all_treatments_table['sample'].to_list()

# fastq filename input function definition set to Python dictionary
def fq_dict_from_sample(wildcards):
  return {
    "fq1": samples_table.loc[wildcards.sample, "fastq1"],
    "fq2": samples_table.loc[wildcards.sample, "fastq2"]
  }
# sample_type input function definition set to Python dictionary
def sample_type_dict_from_sample(wildcards):
  return {
    "treatment": 'results/aligned_speciesOfInterest/' + all_treatments_table.loc[wildcards.sample, "sample"] + '.bam',
    "control": 'results/aligned_speciesOfInterest/' + all_treatments_table.loc[wildcards.sample, "Control"] + '.bam'
  }

##################################################################
##                           rules                              ##
##################################################################

# to run snakemake without explicitly requesting any output files on the command line, we must request output files in the first rule. Therefore we include this otherwise useless rule here  
rule all:
    input:
        #expand("results/aligned/{sample}.bam", sample = merged_keywords_lst),
        #expand("results/aligned/{sample}.bam", sample = samples_table.index),
        #expand("results/qc/fastqc/{sample}_R1_fastqc.html", sample = samples_table.index),
        expand("results/sicer/{sample}-W" + str(config['sicer_windowSize']) + "-G" + str(config['sicer_gapSize']) + "-FDR" + str(config['sicer_fdr']) + "-island.bed", sample = treatment_samples_lst),
        expand("results/macs2_normalPeaks/{sample}_" + str(config['macs2_minimum_FDR_cutoff']) + "_peaks.narrowPeak", sample = treatment_samples_lst),
